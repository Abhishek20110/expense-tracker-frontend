"use client";
import React, { useState, useEffect } from "react";
import axios from "axios";
import { useRouter } from "next/navigation";
import { useSearchParams } from "next/navigation";
import { DollarSign, Calendar, Tag, FileText, Edit, Trash2 } from 'lucide-react';

const ExpenseDetails: React.FC = () => {
    const [expense, setExpense] = useState<any>(null);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const router = useRouter();
    const searchParams = useSearchParams();
    const expenseid = searchParams.get("id");
    const apiurl = process.env.NEXT_PUBLIC_API_URL;
    const token = localStorage.getItem("token");

    useEffect(() => {
        const fetchExpense = async () => {
            try {
                if (!token) {
                    setError("Authorization token is missing");
                    router.push("/login");
                    return;
                }
                if (!expenseid) {
                    router.push("/listexpense");
                    return;
                }
                const response = await axios.get(`${apiurl}/api/expenses/${expenseid}`, {
                    headers: {
                        Authorization: `Bearer ${token}`
                    } 
                });
                setExpense(response.data);
            }
            catch (error) {
                console.error(error);
                setError("Failed to fetch expense");
            }
        }
        fetchExpense();
    }, [apiurl, router, token, expenseid]);

    const handleDelete = async (expenseId: string) => {
        try {
          if (!token) {
            setError("Authorization token is missing");
            router.push("/login");
            return;
          }
          await axios.delete(`${apiurl}/api/expenses//delete/${expenseId}`, {
            headers: { Authorization: `Bearer ${token}` },
          });
          setSuccess("Expense deleted successfully!");
          router.push("/listexpense");
        } catch (err) {
          console.error("Failed to delete expense:", err);
          setError("Failed to delete expense");
          setSuccess(null);
        }
    };

    const handleEdit = () => {
        router.push(`/editexpense?id=${expenseid}`);
    };

    if (error) {
        return (
            <div className="min-h-screen flex items-center justify-center bg-gray-100 p-4">
                <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                    {error}
                </div>
            </div>
        );
    }

    if (!expense) {
        return (
            <div className="min-h-screen flex items-center justify-center bg-gray-100">
                <div className="animate-pulse">
                    <div className="h-10 bg-gray-300 w-64 mb-4"></div>
                    <div className="h-48 bg-gray-200 w-96 rounded-lg"></div>
                </div>
            </div>
        );
    }

    return (
        <div className="min-h-screen bg-gradient-to-r from-pink-100 via-purple-100 to-indigo-100 py-12 px-4 sm:px-6 lg:px-8">
            <div className="max-w-md mx-auto bg-white/80 backdrop-blur-sm shadow-2xl rounded-2xl overflow-hidden transform transition-all hover:scale-105">
                <div className="p-6 space-y-6">
                    <h1 className="text-3xl font-bold text-gray-800 text-center mb-4">{expense.title}</h1>
                    
                    <div className="space-y-4 bg-white/50 p-4 rounded-lg">
                        <div className="flex items-center text-gray-700">
                            <DollarSign className="mr-3 text-blue-500" size={24} />
                            <span className="text-xl font-semibold">
                                {expense.amount.toLocaleString('en-IN', {
                                    style: 'currency',
                                    currency: 'INR'
                                })}
                            </span>
                        </div>
                        
                        <div className="flex items-center text-gray-700">
                            <Tag className="mr-3 text-purple-500" size={24} />
                            <span className="text-base">{expense.category.name}</span>
                        </div>
                        
                        <div className="flex items-center text-gray-700">
                            <Calendar className="mr-3 text-green-500" size={24} />
                            <span className="text-base">
                                {new Date(expense.date).toLocaleDateString("en-GB", {
                                    day: "2-digit",
                                    month: "short",
                                    year: "numeric",
                                })}
                            </span>
                        </div>
                        
                        {expense.note && (
                            <div className="flex items-start text-gray-700">
                                <FileText className="mr-3 text-gray-500 mt-1" size={24} />
                                <span className="text-base italic">{expense.note || "No description"}</span>
                            </div>
                        )}
                    </div>

                    <div className="flex space-x-4">
                        <button 
                            onClick={handleEdit}
                            className="flex-1 flex items-center justify-center bg-blue-500 text-white py-2 rounded-lg hover:bg-blue-600 transition"
                        >
                            <Edit className="mr-2" size={18} /> Edit
                        </button>
                        <button 
                            onClick={() => handleDelete(expenseid || '')}
                            className="flex-1 flex items-center justify-center bg-red-500 text-white py-2 rounded-lg hover:bg-red-600 transition"
                        >
                            <Trash2 className="mr-2" size={18} /> Delete
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ExpenseDetails;